module "ec2-instance" {
  source = "./EC2"
  ec2-instance = local.ec2-instance
}

module "vpc" {
  source = "./vpc"
  vpc_cidr = "10.5.0.0/16"
  common-tags = {
    Name = "test-vpc"
  }
}

module "subnet-private-a" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.200.0/24"
  availability_zone = "ap-south-1a"
  ng_id  = module.ng-a.id
  common-tags = {
    Name = "servian-assignment-subnet-private-ap-south-1a"
  }
}

module "subnet-private-b" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.201.0/24"
  ng_id  = module.ng-b.id
  availability_zone = "ap-south-1b"
  common-tags = {
    Name = "servian-assignment-subnet-private-ap-south-1b"
  }
}

module "subnet-private-c" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.202.0/24"
  ng_id  = module.ng-c.id
  availability_zone = "ap-south-1c"
  common-tags = {
    Name = "servian-assignment-subnet-private-ap-south-1c"
  }
}

module "subnet-app-with-ig-a" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.199.0/24"
  availability_zone = "ap-south-1a"
  map_public_ip_on_launch = "true"
  igw_id  = module.vpc.igw_id
  common-tags = {
    Name = "servian-assignment-subnet-app-with-internet-gateway-ap-south-1a"
  }
}

module "subnet-app-with-ig-b" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.198.0/24"
  map_public_ip_on_launch = "true"
  igw_id  = module.vpc.igw_id
  availability_zone = "ap-south-1b"
  common-tags = {
    Name = "servian-assignment-subnet-app-with-internet-gateway-ap-south-1b"
  }
}

module "subnet-app-with-ig-c" {
  source = "./subnet"
  vpc_id = module.vpc.id
  cidr_block = "10.5.197.0/24"
  map_public_ip_on_launch = "true"
  igw_id  = module.vpc.igw_id
  availability_zone = "ap-south-1c"
  common-tags = {
    Name = "servian-assignment-subnet-app-with-internet-gateway-ap-south-1c"
  }
}

module "ng-a" {
  source = "./ng"
  subnet_id = module.subnet-private-a.id
}

module "ng-b" {
  source = "./ng"
  subnet_id = module.subnet-private-b.id
}

module "ng-c" {
  source = "./ng"
  subnet_id = module.subnet-private-c.id
}

module "sg-public" {
  source = "./sg"
  sg = local.sg
  vpc_id = module.vpc.id
  common-tags = {
    Name = "sg-public"
  }
}

resource "tls_private_key" "key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

#https://stackoverflow.com/questions/49743220/how-do-i-create-an-ssh-key-in-terraform
resource "aws_key_pair" "generated_key" {
  key_name   = local.key
  public_key = tls_private_key.key.public_key_openssh

  provisioner "local-exec" {    # Generate "terraform-key-pair.pem" in current directory
    command = <<-EOT
      echo '${tls_private_key.key.private_key_pem}' > ./'${local.key}'.pem
      chmod 400 ./'${local.key}'.pem
    EOT
  }
}

output "ssh_key" {
  description = "ssh key generated by terraform"
  value       = tls_private_key.key.private_key_pem
  sensitive = true
}

output "private_ip" {
  value = module.ec2-instance.vm["test"].private_ip
}

output "public_ip" {
  value = module.ec2-instance.vm["test"].public_ip
}
